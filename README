##################################################################################
################################   TISSUE STACK   ################################
##################################################################################
#                                                                                #
# Tissue Stack is an open source web based image viewer which allows the user to #
# view 3D data as 2D cross sections.                                             #
#                       							 #
# While at its core it's modelled after GIS web mapping applications,            #
# it's intended use is for neuro-imaging.                                        # 
#										 #
# Tissue Stack aims at serving its data as image tiles which can be both pre-    #
# tiled in advance or created on the fly by extracting from the original source  #
# file. 									 #
#										 #
# The used file formats will be anything that is supported by the MINC Tool Kit: # 
#    http://www.bic.mni.mcgill.ca/ServicesSoftware/ServicesSoftwareMincToolKit   #
# as well as the nifti format: http://nifti.nimh.nih.gov/                        #
# The TissueStack Image Server supplies converter plugins to turn the above      #
# mentioned formats into a "raw" file which is basically a stream of bytes       #
# incl. header for quick and easy sequential reads                               #   
#										 #
# Of course any data that is pre-tiled as png/jpeg and adheres to Tissue Stack's #
# directory structure for tiled data sets can be consumed and viewed via the web #
# front-end.									 # 
#										 #
#                                   *******                                      #
#                                                                  		 #
# A Tissue Stack Server Instance consists of the following 5 components:         # 
#										 #
#   1) The WEB Front End => see src/web/README for installation instructions     #
#        									 #
#   2) A Configuration Back End => see src/java/README for further explanations  #
#										 #        
#   3) A Configuration Data Base => see src/sql/README for how to create the     #
#      data base          							 #
#										 #        
#   4) The Image Server for pre and on-the-fly tiling  => see src/c/README for   #
#      how to build and install							 #
#										 #        
#   5) Some optional bash scripts for service starting and stopping 		 #
#      (/etc/init.d/) => see src/bash						 #
#										 #         
#										 #
#   Notes:									 #
#   ------									 #
#   -) Number 1, 2 and 3 are by default rather tightly coupled. 		 #
#      That is not to say that one cannot use the web front-end only but it      #
#      requires	some modification to bypass the configuration loading and 	 #
#      construct the necessary java script objects manually.			 #
#   -) Number 4 is technically optional if all datasets have been pre-tiled 	 #
#      manually beforehand. Needless to say that the Image Server can take this  #
#      task off your hands and prepare the tiles just as the application expects #
#       it.									 #
#   -) Number 5 is certainly optional and facilitates the startup and shutdown   #
#      of the Image Server and Java Application Server    			 #
# 										 #
# 										 #
#   ATTENTION:  								 #
#   ----------									 #
#   This is a work in progress! The 'develop' branch contains the most 		 #
#   up-to-date code and newest features.					 #
#   On the downside, things can be buggy...    					 #
##################################################################################
